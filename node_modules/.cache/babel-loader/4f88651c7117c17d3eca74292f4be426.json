{"ast":null,"code":"import _slicedToArray from\"E:\\\\Udemy\\\\All Project\\\\Todo-list-react\\\\react-todo-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState}from'react';import TodoForm from'./TodoForm';import{RiCloseCircleLine}from'react-icons/ri';import{TiEdit}from'react-icons/ti';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Todo=function Todo(_ref){var todos=_ref.todos,completeTodo=_ref.completeTodo,removeTodo=_ref.removeTodo,updateTodo=_ref.updateTodo;var _useState=useState({id:null,value:''}),_useState2=_slicedToArray(_useState,2),edit=_useState2[0],setEdit=_useState2[1];var submitUpdate=function submitUpdate(value){updateTodo(edit.id,value);setEdit({id:null,value:''});};if(edit.id){return/*#__PURE__*/_jsx(TodoForm,{edit:edit,onSubmit:submitUpdate});}return todos.map(function(todo,index){return/*#__PURE__*/_jsxs(\"div\",{className:todo.isCompleted?'todo-row complete':'todo-row',children:[/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return completeTodo(todo.id);},children:todo.text},todo.id),/*#__PURE__*/_jsxs(\"div\",{className:\"icons\",children:[/*#__PURE__*/_jsx(RiCloseCircleLine,{onClick:function onClick(){return removeTodo(todo.id);},className:\"delete-icon\"}),/*#__PURE__*/_jsx(TiEdit,{onClick:function onClick(){return setEdit({id:todo.id,value:todo.text});},className:\"delete-icon\"})]})]},index);});};export default Todo;","map":{"version":3,"sources":["E:/Udemy/All Project/Todo-list-react/react-todo-app/src/components/Todo.js"],"names":["React","useState","TodoForm","RiCloseCircleLine","TiEdit","Todo","todos","completeTodo","removeTodo","updateTodo","id","value","edit","setEdit","submitUpdate","map","todo","index","isCompleted","text"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,iBAAT,KAAkC,gBAAlC,CACA,OAASC,MAAT,KAAuB,gBAAvB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAqD,IAAlDC,CAAAA,KAAkD,MAAlDA,KAAkD,CAA3CC,YAA2C,MAA3CA,YAA2C,CAA7BC,UAA6B,MAA7BA,UAA6B,CAAjBC,UAAiB,MAAjBA,UAAiB,CAC9D,cAAwBR,QAAQ,CAAC,CAC7BS,EAAE,CAAE,IADyB,CAE7BC,KAAK,CAAE,EAFsB,CAAD,CAAhC,wCAAOC,IAAP,eAAaC,OAAb,eAKA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,KAAD,CAAW,CAC5BF,UAAU,CAACG,IAAI,CAACF,EAAN,CAAUC,KAAV,CAAV,CACAE,OAAO,CAAC,CAAEH,EAAE,CAAE,IAAN,CAAYC,KAAK,CAAE,EAAnB,CAAD,CAAP,CACH,CAHD,CAKA,GAAIC,IAAI,CAACF,EAAT,CAAa,CACT,mBAAO,KAAC,QAAD,EAAU,IAAI,CAAEE,IAAhB,CAAsB,QAAQ,CAAEE,YAAhC,EAAP,CACH,CAED,MAAOR,CAAAA,KAAK,CAACS,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,qBACb,aACI,SAAS,CAAED,IAAI,CAACE,WAAL,CAAmB,mBAAnB,CAAyC,UADxD,wBAII,YAAmB,OAAO,CAAE,yBAAMX,CAAAA,YAAY,CAACS,IAAI,CAACN,EAAN,CAAlB,EAA5B,UACKM,IAAI,CAACG,IADV,EAAUH,IAAI,CAACN,EAAf,CAJJ,cAQI,aAAK,SAAS,CAAC,OAAf,wBACI,KAAC,iBAAD,EACI,OAAO,CAAE,yBAAMF,CAAAA,UAAU,CAACQ,IAAI,CAACN,EAAN,CAAhB,EADb,CAEI,SAAS,CAAC,aAFd,EADJ,cAKI,KAAC,MAAD,EACI,OAAO,CAAE,yBAAMG,CAAAA,OAAO,CAAC,CAAEH,EAAE,CAAEM,IAAI,CAACN,EAAX,CAAeC,KAAK,CAAEK,IAAI,CAACG,IAA3B,CAAD,CAAb,EADb,CAEI,SAAS,CAAC,aAFd,EALJ,GARJ,GAESF,KAFT,CADa,EAAV,CAAP,CAqBH,CApCD,CAsCA,cAAeZ,CAAAA,IAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport TodoForm from './TodoForm'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: '',\r\n    })\r\n\r\n    const submitUpdate = (value) => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({ id: null, value: '' })\r\n    }\r\n\r\n    if (edit.id) {\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div\r\n            className={todo.isCompleted ? 'todo-row complete' : 'todo-row'}\r\n            key={index}\r\n        >\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n\r\n            <div className='icons'>\r\n                <RiCloseCircleLine\r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className='delete-icon'\r\n                />\r\n                <TiEdit\r\n                    onClick={() => setEdit({ id: todo.id, value: todo.text })}\r\n                    className='delete-icon'\r\n                />\r\n            </div>\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}