{"ast":null,"code":"var _jsxFileName = \"E:\\\\Udemy\\\\All Project\\\\Todo-list-react\\\\react-todo-app\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState('');\n  const inputRef = useRef(null);\n  useEffect(() => {});\n\n  const handlerChange = event => {\n    setInput(event.target.value);\n  };\n\n  const handlerSubmit = event => {\n    event.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handlerSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Add a todo\",\n      value: input,\n      name: \"text\",\n      className: \"todo-input\",\n      onChange: handlerChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"todo-button\",\n      children: \"Add todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"4bB8PA6vI65WiV8dMZT00Ka0B5A=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["E:/Udemy/All Project/Todo-list-react/react-todo-app/src/components/TodoForm.js"],"names":["React","useState","useRef","useEffect","TodoForm","props","input","setInput","inputRef","handlerChange","event","target","value","handlerSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMO,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;AACAC,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,CAAT;;AAEA,QAAMM,aAAa,GAAIC,KAAD,IAAW;AAC7BH,IAAAA,QAAQ,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAR;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAIH,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACI,cAAN;AAEAT,IAAAA,KAAK,CAACU,QAAN,CAAe;AACXC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADO;AAEXC,MAAAA,IAAI,EAAEd;AAFK,KAAf;AAKAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GATD;;AAUA,sBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAEM,aAAtC;AAAA,4BACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,WAAW,EAAC,YAFhB;AAGI,MAAA,KAAK,EAAEP,KAHX;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,SAAS,EAAC,YALd;AAMI,MAAA,QAAQ,EAAEG;AANd;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAhCQL,Q;;KAAAA,Q;AAkCT,eAAeA,QAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState('')\r\n    const inputRef = useRef(null)\r\n    useEffect(() => {})\r\n\r\n    const handlerChange = (event) => {\r\n        setInput(event.target.value)\r\n    }\r\n\r\n    const handlerSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input,\r\n        })\r\n\r\n        setInput('')\r\n    }\r\n    return (\r\n        <form className='todo-form' onSubmit={handlerSubmit}>\r\n            <input\r\n                type='text'\r\n                placeholder='Add a todo'\r\n                value={input}\r\n                name='text'\r\n                className='todo-input'\r\n                onChange={handlerChange}\r\n            />\r\n            <button className='todo-button'>Add todo</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n"]},"metadata":{},"sourceType":"module"}