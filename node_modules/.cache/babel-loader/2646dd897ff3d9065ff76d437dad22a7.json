{"ast":null,"code":"var _jsxFileName = \"E:\\\\Udemy\\\\All Project\\\\Todo-list-react\\\\react-todo-app\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handlerChange = event => {\n    setInput(event.target.value);\n  };\n\n  const handlerSubmit = event => {\n    event.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handlerSubmit,\n    children: [' ', props.edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a todo\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input edit\",\n        onChange: handlerChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button edit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a todo\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input\",\n        onChange: handlerChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Add todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TodoForm, \"xbvrlj5lrJII/vsr6NCUo81spDI=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["E:/Udemy/All Project/Todo-list-react/react-todo-app/src/components/TodoForm.js"],"names":["React","useState","useRef","useEffect","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","handlerChange","event","target","handlerSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;AACA,QAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAFQ,CAAT;;AAIA,QAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BP,IAAAA,QAAQ,CAACO,KAAK,CAACC,MAAN,CAAaN,KAAd,CAAR;AACH,GAFD;;AAIA,QAAMO,aAAa,GAAIF,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACG,cAAN;AAEAZ,IAAAA,KAAK,CAACa,QAAN,CAAe;AACXC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,CADO;AAEXC,MAAAA,IAAI,EAAEjB;AAFK,KAAf;AAKAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GATD;;AAUA,sBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAES,aAAtC;AAAA,eACK,GADL,EAEKX,KAAK,CAACG,IAAN,gBACG;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,YAFhB;AAGI,QAAA,KAAK,EAAEF,KAHX;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,SAAS,EAAC,iBALd;AAMI,QAAA,QAAQ,EAAEO,aANd;AAOI,QAAA,GAAG,EAAEH;AAPT;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAQ,QAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAcG;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,YAFhB;AAGI,QAAA,KAAK,EAAEJ,KAHX;AAII,QAAA,IAAI,EAAC,MAJT;AAKI,QAAA,SAAS,EAAC,YALd;AAMI,QAAA,QAAQ,EAAEO,aANd;AAOI,QAAA,GAAG,EAAEH;AAPT;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GArDQN,Q;;KAAAA,Q;AAuDT,eAAeA,QAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '')\r\n    const inputRef = useRef(null)\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handlerChange = (event) => {\r\n        setInput(event.target.value)\r\n    }\r\n\r\n    const handlerSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input,\r\n        })\r\n\r\n        setInput('')\r\n    }\r\n    return (\r\n        <form className='todo-form' onSubmit={handlerSubmit}>\r\n            {' '}\r\n            {props.edit ? (\r\n                <div>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Add a todo'\r\n                        value={input}\r\n                        name='text'\r\n                        className='todo-input edit'\r\n                        onChange={handlerChange}\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className='todo-button edit'>Update</button>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Add a todo'\r\n                        value={input}\r\n                        name='text'\r\n                        className='todo-input'\r\n                        onChange={handlerChange}\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className='todo-button'>Add todo</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n"]},"metadata":{},"sourceType":"module"}