{"ast":null,"code":"import _toConsumableArray from\"E:\\\\Udemy\\\\All Project\\\\Todo-list-react\\\\react-todo-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\toConsumableArray.js\";import _slicedToArray from\"E:\\\\Udemy\\\\All Project\\\\Todo-list-react\\\\react-todo-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState}from'react';import TodoForm from'./TodoForm';import Todo from'./Todo';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoList=function TodoList(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];var addTodo=function addTodo(todo){if(!todo.text||/^\\s*$/.test(todo.text)){return;}var newTodos=[todo].concat(_toConsumableArray(todos));setTodos(newTodos);};var updateTodo=function updateTodo(todoId,newValue){if(!newValue.text||/^\\s*$/.test(newValue.text)){return;}setTodos(function(prev){return prev.map(function(item){return item.id===todoId?newValue:item;});});};var removeTodo=function removeTodo(id){var removeArr=_toConsumableArray(todos).filter(function(todo){return todo.id!==id;});setTodos(removeArr);};var completeTodo=function completeTodo(id){var updatedTodos=todos.map(function(todo){if(todo.id===id){todo.isComplete=!todo.isComplete;}return todo;});setTodos(updatedTodos);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"What's the Plan for Todays?\"}),/*#__PURE__*/_jsx(TodoForm,{onSubmit:addTodo}),/*#__PURE__*/_jsx(Todo,{todos:todos,complete:completeTodo,removeTodo:removeTodo,updateTodo:updateTodo})]});};export default TodoList;","map":{"version":3,"sources":["E:/Udemy/All Project/Todo-list-react/react-todo-app/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removeArr","filter","completeTodo","updatedTodos","isComplete"],"mappings":"8SAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,cAA0BH,QAAQ,CAAC,EAAD,CAAlC,wCAAOI,KAAP,eAAcC,QAAd,eAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAU,CACtB,GAAI,CAACA,IAAI,CAACC,IAAN,EAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,CAA2C,CACvC,OACH,CACD,GAAME,CAAAA,QAAQ,EAAIH,IAAJ,4BAAaH,KAAb,EAAd,CACAC,QAAQ,CAACK,QAAD,CAAR,CACH,CAND,CAQA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAASC,QAAT,CAAsB,CACrC,GAAI,CAACA,QAAQ,CAACL,IAAV,EAAkB,QAAQC,IAAR,CAAaI,QAAQ,CAACL,IAAtB,CAAtB,CAAmD,CAC/C,OACH,CAEDH,QAAQ,CAAC,SAACS,IAAD,QACLA,CAAAA,IAAI,CAACC,GAAL,CAAS,SAACC,IAAD,QAAWA,CAAAA,IAAI,CAACC,EAAL,GAAYL,MAAZ,CAAqBC,QAArB,CAAgCG,IAA3C,EAAT,CADK,EAAD,CAAR,CAGH,CARD,CAUA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACD,EAAD,CAAQ,CACvB,GAAME,CAAAA,SAAS,CAAG,mBAAIf,KAAJ,EAAWgB,MAAX,CAAkB,SAACb,IAAD,QAAUA,CAAAA,IAAI,CAACU,EAAL,GAAYA,EAAtB,EAAlB,CAAlB,CAEAZ,QAAQ,CAACc,SAAD,CAAR,CACH,CAJD,CAMA,GAAME,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACJ,EAAD,CAAQ,CACzB,GAAIK,CAAAA,YAAY,CAAGlB,KAAK,CAACW,GAAN,CAAU,SAACR,IAAD,CAAU,CACnC,GAAIA,IAAI,CAACU,EAAL,GAAYA,EAAhB,CAAoB,CAChBV,IAAI,CAACgB,UAAL,CAAkB,CAAChB,IAAI,CAACgB,UAAxB,CACH,CACD,MAAOhB,CAAAA,IAAP,CACH,CALkB,CAAnB,CAMAF,QAAQ,CAACiB,YAAD,CAAR,CACH,CARD,CAUA,mBACI,oCACI,mDADJ,cAEI,KAAC,QAAD,EAAU,QAAQ,CAAEhB,OAApB,EAFJ,cAGI,KAAC,IAAD,EACI,KAAK,CAAEF,KADX,CAEI,QAAQ,CAAEiB,YAFd,CAGI,UAAU,CAAEH,UAHhB,CAII,UAAU,CAAEP,UAJhB,EAHJ,GADJ,CAYH,CAjDD,CAmDA,cAAeR,CAAAA,QAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = () => {\r\n    const [todos, setTodos] = useState([])\r\n\r\n    const addTodo = (todo) => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return\r\n        }\r\n        const newTodos = [todo, ...todos]\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return\r\n        }\r\n\r\n        setTodos((prev) =>\r\n            prev.map((item) => (item.id === todoId ? newValue : item))\r\n        )\r\n    }\r\n\r\n    const removeTodo = (id) => {\r\n        const removeArr = [...todos].filter((todo) => todo.id !== id)\r\n\r\n        setTodos(removeArr)\r\n    }\r\n\r\n    const completeTodo = (id) => {\r\n        let updatedTodos = todos.map((todo) => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>What's the Plan for Todays?</h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo\r\n                todos={todos}\r\n                complete={completeTodo}\r\n                removeTodo={removeTodo}\r\n                updateTodo={updateTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n"]},"metadata":{},"sourceType":"module"}