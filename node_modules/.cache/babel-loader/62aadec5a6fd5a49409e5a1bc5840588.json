{"ast":null,"code":"var _jsxFileName = \"E:\\\\Udemy\\\\All Project\\\\Todo-list-react\\\\react-todo-app\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const updateTodo = id => {};\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the Plan for Todays?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      complete: completeTodo,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["E:/Udemy/All Project/Todo-list-react/react-todo-app/src/components/TodoList.js"],"names":["React","useState","TodoForm","Todo","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","updateTodo","id","removeTodo","removeArr","filter","completeTodo","updatedTodos","map","isComplete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAIC,IAAD,IAAU;AACtB,QAAI,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAlB,EAA2C;AACvC;AACH;;AACD,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACH,GAND;;AAQA,QAAMC,UAAU,GAAIC,EAAD,IAAQ,CAAE,CAA7B;;AAEA,QAAMC,UAAU,GAAID,EAAD,IAAQ;AACvB,UAAME,SAAS,GAAG,CAAC,GAAGV,KAAJ,EAAWW,MAAX,CAAmBR,IAAD,IAAUA,IAAI,CAACK,EAAL,KAAYA,EAAxC,CAAlB;AAEAP,IAAAA,QAAQ,CAACS,SAAD,CAAR;AACH,GAJD;;AAMA,QAAME,YAAY,GAAIJ,EAAD,IAAQ;AACzB,QAAIK,YAAY,GAAGb,KAAK,CAACc,GAAN,CAAWX,IAAD,IAAU;AACnC,UAAIA,IAAI,CAACK,EAAL,KAAYA,EAAhB,EAAoB;AAChBL,QAAAA,IAAI,CAACY,UAAL,GAAkB,CAACZ,IAAI,CAACY,UAAxB;AACH;;AACD,aAAOZ,IAAP;AACH,KALkB,CAAnB;AAMAF,IAAAA,QAAQ,CAACY,YAAD,CAAR;AACH,GARD;;AAUA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEX;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,IAAD;AACI,MAAA,KAAK,EAAEF,KADX;AAEI,MAAA,QAAQ,EAAEY,YAFd;AAGI,MAAA,UAAU,EAAEH;AAHhB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAxCD;;GAAMV,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = () => {\r\n    const [todos, setTodos] = useState([])\r\n\r\n    const addTodo = (todo) => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return\r\n        }\r\n        const newTodos = [todo, ...todos]\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    const updateTodo = (id) => {}\r\n\r\n    const removeTodo = (id) => {\r\n        const removeArr = [...todos].filter((todo) => todo.id !== id)\r\n\r\n        setTodos(removeArr)\r\n    }\r\n\r\n    const completeTodo = (id) => {\r\n        let updatedTodos = todos.map((todo) => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>What's the Plan for Todays?</h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo\r\n                todos={todos}\r\n                complete={completeTodo}\r\n                removeTodo={removeTodo}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n"]},"metadata":{},"sourceType":"module"}