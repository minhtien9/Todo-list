{"ast":null,"code":"import _slicedToArray from\"E:\\\\Udemy\\\\All Project\\\\Todo-list-react\\\\react-todo-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import React,{useState,useRef,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TodoForm(props){var _useState=useState(props.edit?props.edit.value:''),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var inputRef=useRef(null);useEffect(function(){inputRef.current.focus();});var handlerChange=function handlerChange(event){setInput(event.target.value);};var handlerSubmit=function handlerSubmit(event){event.preventDefault();props.onSubmit({id:Math.floor(Math.random()*10000),text:input});setInput('');};return/*#__PURE__*/_jsxs(\"form\",{className:\"todo-form\",onSubmit:handlerSubmit,children:[' ',props.edit?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Update your item\",value:input,name:\"text\",className:\"todo-input edit\",onChange:handlerChange,ref:inputRef}),/*#__PURE__*/_jsx(\"button\",{className:\"todo-button edit\",children:\"Update\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Add a todo\",value:input,name:\"text\",className:\"todo-input\",onChange:handlerChange,ref:inputRef}),/*#__PURE__*/_jsx(\"button\",{className:\"todo-button\",children:\"Add todo\"})]})]});}export default TodoForm;","map":{"version":3,"sources":["E:/Udemy/All Project/Todo-list-react/react-todo-app/src/components/TodoForm.js"],"names":["React","useState","useRef","useEffect","TodoForm","props","edit","value","input","setInput","inputRef","current","focus","handlerChange","event","target","handlerSubmit","preventDefault","onSubmit","id","Math","floor","random","text"],"mappings":"mJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,MAA1B,CAAkCC,SAAlC,KAAmD,OAAnD,C,wFAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,CACrB,cAA0BJ,QAAQ,CAACI,KAAK,CAACC,IAAN,CAAaD,KAAK,CAACC,IAAN,CAAWC,KAAxB,CAAgC,EAAjC,CAAlC,wCAAOC,KAAP,eAAcC,QAAd,eACA,GAAMC,CAAAA,QAAQ,CAAGR,MAAM,CAAC,IAAD,CAAvB,CACAC,SAAS,CAAC,UAAM,CACZO,QAAQ,CAACC,OAAT,CAAiBC,KAAjB,GACH,CAFQ,CAAT,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,CAC7BL,QAAQ,CAACK,KAAK,CAACC,MAAN,CAAaR,KAAd,CAAR,CACH,CAFD,CAIA,GAAMS,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACF,KAAD,CAAW,CAC7BA,KAAK,CAACG,cAAN,GAEAZ,KAAK,CAACa,QAAN,CAAe,CACXC,EAAE,CAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,KAA3B,CADO,CAEXC,IAAI,CAAEf,KAFK,CAAf,EAKAC,QAAQ,CAAC,EAAD,CAAR,CACH,CATD,CAUA,mBACI,cAAM,SAAS,CAAC,WAAhB,CAA4B,QAAQ,CAAEO,aAAtC,WACK,GADL,CAEKX,KAAK,CAACC,IAAN,cACG,oCACI,cACI,IAAI,CAAC,MADT,CAEI,WAAW,CAAC,kBAFhB,CAGI,KAAK,CAAEE,KAHX,CAII,IAAI,CAAC,MAJT,CAKI,SAAS,CAAC,iBALd,CAMI,QAAQ,CAAEK,aANd,CAOI,GAAG,CAAEH,QAPT,EADJ,cAUI,eAAQ,SAAS,CAAC,kBAAlB,oBAVJ,GADH,cAcG,oCACI,cACI,IAAI,CAAC,MADT,CAEI,WAAW,CAAC,YAFhB,CAGI,KAAK,CAAEF,KAHX,CAII,IAAI,CAAC,MAJT,CAKI,SAAS,CAAC,YALd,CAMI,QAAQ,CAAEK,aANd,CAOI,GAAG,CAAEH,QAPT,EADJ,cAUI,eAAQ,SAAS,CAAC,aAAlB,sBAVJ,GAhBR,GADJ,CAgCH,CAED,cAAeN,CAAAA,QAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '')\r\n    const inputRef = useRef(null)\r\n    useEffect(() => {\r\n        inputRef.current.focus()\r\n    })\r\n\r\n    const handlerChange = (event) => {\r\n        setInput(event.target.value)\r\n    }\r\n\r\n    const handlerSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input,\r\n        })\r\n\r\n        setInput('')\r\n    }\r\n    return (\r\n        <form className='todo-form' onSubmit={handlerSubmit}>\r\n            {' '}\r\n            {props.edit ? (\r\n                <div>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Update your item'\r\n                        value={input}\r\n                        name='text'\r\n                        className='todo-input edit'\r\n                        onChange={handlerChange}\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className='todo-button edit'>Update</button>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Add a todo'\r\n                        value={input}\r\n                        name='text'\r\n                        className='todo-input'\r\n                        onChange={handlerChange}\r\n                        ref={inputRef}\r\n                    />\r\n                    <button className='todo-button'>Add todo</button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n"]},"metadata":{},"sourceType":"module"}